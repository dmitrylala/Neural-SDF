TOOLCHAIN_FILE=$(BUILD_DIR)/build/$(BUILD_TYPE)/generators/conan_toolchain.cmake


help:  ## Show help
	@grep -E '^[.a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

clean: ## Clean autogenerated files
	@echo "=== Cleaning build artifacts and tmp files ==="
	rm -rf dist outputs
	find . -type f -name "*.DS_Store" -ls -delete
	find . | grep -E "(__pycache__|\.pyc|\.pyo)" | xargs rm -rf
	find . | grep -E ".pytest_cache" | xargs rm -rf
	find . | grep -E ".ipynb_checkpoints" | xargs rm -rf
	find . | grep -E ".coverage*" | xargs rm -rf
	bash scripts/clean.sh

build_cpu: ## Configure and build for CPU
	@echo "=== Building for CPU ==="
	conan install . --build=missing --output-folder=$(BUILD_DIR)
	cmake -B $(BUILD_DIR) \
		-DCMAKE_BUILD_TYPE=$(BUILD_TYPE) \
		-DCMAKE_TOOLCHAIN_FILE=$(TOOLCHAIN_FILE)
	cmake --build $(BUILD_DIR) --target train render nn_test -j8

run_kslicer: ## Generate Vulkan code with kslicer
	@echo "=== Running kslicer ==="
	bash scripts/run_kslicer.sh $(KSLICER_CFG)

build_gpu: run_kslicer ## Configure and build for GPU
	@echo "=== Building for GPU ==="
	conan install . --build=missing --output-folder=$(BUILD_DIR)
	cmake -B $(BUILD_DIR) \
		-DCMAKE_BUILD_TYPE=$(BUILD_TYPE) \
		-DCMAKE_TOOLCHAIN_FILE=$(TOOLCHAIN_FILE) \
		-DUSE_VULKAN=ON
	cmake --build $(BUILD_DIR) --target train render -j8

train: ## Run train
	@echo "=== Running train ==="
	./$(BUILD_DIR)/bin/train \
		--n_hidden 2 \
		--hidden_size 64 \
		--batch_size 5000 \
		--train_sample data/sdf1_points.bin \
		--train_cfg conf/train.txt \
		--save_to data/sdf1_trained_weights.bin

render: ## Run render
	@echo "=== Running render ==="
	./$(BUILD_DIR)/bin/render \
		--n_hidden 2 \
		--hidden_size 64 \
		--batch_size 1 \
		--weights data/sdf1_trained_weights.bin \
		--camera conf/camera_1.txt \
		--light conf/light.txt

test_unit: ## Run unit tests
	@echo "=== Running unit tests ==="
	./$(BUILD_DIR)/test/unit/nn_test

infer_py: ## Run network inference on python
	@echo "=== Running inference on python ==="
	python scripts/infer.py \
		data/sdf1_weights.bin \
		data/sdf1_test.bin \
		--n_hidden 2 \
		--hidden_size 64
